# StatefulSet for MongoDB
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb # Associated headless service for DNS resolution
  replicas: 1 # Number of MongoDB replicas
  selector:
    matchLabels:
      app: mongodb # Labels to match for this StatefulSet
  template:
    metadata:
      labels:
        app: mongodb # Pod label for identification
    spec:
      nodeSelector:
        "kubernetes.io/os": linux # Run only on Linux nodes
      containers:
        - name: mongodb
          image: mongo:4.2 # MongoDB container image version
          ports:
            - containerPort: 27017 # Default MongoDB port
              name: mongodb
          resources: # Resource requests and limits for MongoDB
            requests:
              cpu: 5m # Minimum CPU
              memory: 75Mi # Minimum Memory
            limits:
              cpu: 25m # Maximum CPU
              memory: 1024Mi # Maximum Memory
          livenessProbe: # Probe to check MongoDB health
            exec:
              command:
                - mongosh
                - --eval
                - db.runCommand('ping').ok
            initialDelaySeconds: 5 # Wait time before starting probe
            periodSeconds: 5 # Interval between probes
---
# Service to expose MongoDB
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
    - port: 27017 # MongoDB service port
  selector:
    app: mongodb # Target pods with label `app: mongodb`
  type: ClusterIP # Internal cluster service
---
# StatefulSet for RabbitMQ
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: rabbitmq
# spec:
#   serviceName: rabbitmq # Headless service for RabbitMQ
#   replicas: 1 # Single replica
#   selector:
#     matchLabels:
#       app: rabbitmq
#   template:
#     metadata:
#       labels:
#         app: rabbitmq
#     spec:
#       nodeSelector:
#         "kubernetes.io/os": linux
#       containers:
#         - name: rabbitmq
#           image: rabbitmq:3-management # RabbitMQ image with management UI
#           ports:
#             - containerPort: 5672 # AMQP protocol port
#               name: rabbitmq-amqp
#             - containerPort: 15672 # HTTP management UI port
#               name: rabbitmq-http
#           env: # Environment variables for RabbitMQ
#             - name: RABBITMQ_DEFAULT_USER
#               value: "username" # Default username
#             - name: RABBITMQ_DEFAULT_PASS
#               value: "password" # Default password
#           resources: # Resource limits and requests
#             requests:
#               cpu: 10m
#               memory: 128Mi
#             limits:
#               cpu: 250m
#               memory: 256Mi
#           volumeMounts: # Mount configuration for RabbitMQ plugins
#             - name: rabbitmq-enabled-plugins
#               mountPath: /etc/rabbitmq/enabled_plugins
#               subPath: enabled_plugins
#       volumes:
#         - name: rabbitmq-enabled-plugins
#           configMap:
#             name: rabbitmq-enabled-plugins
#             items:
#               - key: rabbitmq_enabled_plugins
#                 path: enabled_plugins
---
# Service for RabbitMQ
# apiVersion: v1
# kind: Service
# metadata:
#   name: rabbitmq
# spec:
#   selector:
#     app: rabbitmq
#   ports:
#     - name: rabbitmq-amqp
#       port: 5672
#       targetPort: 5672
#     - name: rabbitmq-http
#       port: 15672
#       targetPort: 15672
#   type: ClusterIP
---
# Deployment for Order Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderservice-bestbuy
spec:
  replicas: 1 # Single replica
  selector:
    matchLabels:
      app: orderservice-bestbuy
  template:
    metadata:
      labels:
        app: orderservice-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: order-service
          image: nidhi0152/bestbuy-orderservice:latest # Custom image for order service
          ports:
            - containerPort: 3000 # Order service listens on this port
          env: # Environment variables for configuration
            - name: ORDER_QUEUE_HOSTNAME
              value: "bestbuy.servicebus.windows.net"
            - name: ORDER_QUEUE_PORT
              value: "5672"
            - name: ORDER_QUEUE_USERNAME
              value: "sender"
            - name: ORDER_QUEUE_PASSWORD
              value: "FBkNoARNPKoYkbWu/koeLFV5CrlNXoyjW+ASbM4Ccq0="
            - name: ORDER_QUEUE_NAME
              value: "orders"
            - name: FASTIFY_ADDRESS
              value: "0.0.0.0"
          resources: # Resource allocation
            requests:
              cpu: 1m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 256Mi
          startupProbe: # Initial health check
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe: # Ready status probe
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe: # Ongoing health check
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Order Service
apiVersion: v1
kind: Service
metadata:
  name: orderservice-bestbuy
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app: orderservice-bestbuy
---
# Deployment for Makeline Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: makelineservice-bestbuy
spec:
  replicas: 1 # Single replica
  selector:
    matchLabels:
      app: makelineservice-bestbuy
  template:
    metadata:
      labels:
        app: makelineservice-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: makeline-service
          image: nidhi0152/bestbuy-makelineservice:latest # Custom Makeline service image
          ports:
            - containerPort: 3001 # Makeline service listens on this port
          env: # Environment variables for configuration
            - name: ORDER_QUEUE_URI
              value: "amqp://bestbuy.servicebus.windows.net" # RabbitMQ connection string
            - name: ORDER_QUEUE_USERNAME
              value: "listner"
            - name: ORDER_QUEUE_PASSWORD
              value: "fQWy3YXUPlNz8WYcG8//5SolwJRRaNZp6+ASbMCPnw4="
            - name: ORDER_QUEUE_NAME
              value: "orders"
            - name: ORDER_DB_URI
              value: "mongodb://mongodb:27017" # MongoDB connection string
            - name: ORDER_DB_NAME
              value: "orderdb" # Database name
            - name: ORDER_DB_COLLECTION_NAME
              value: "orders" # Collection name
          resources: # Resource requests and limits
            requests:
              cpu: 1m
              memory: 6Mi
            limits:
              cpu: 5m
              memory: 20Mi
          startupProbe: # Initial health check
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 10
            periodSeconds: 5
          readinessProbe: # Ready status probe
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe: # Ongoing health check
            httpGet:
              path: /health
              port: 3001
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Makeline Service
apiVersion: v1
kind: Service
metadata:
  name: makelineservice-bestbuy
spec:
  type: ClusterIP # Internal cluster service
  ports:
    - name: http
      port: 3001 # Service port
      targetPort: 3001
  selector:
    app: makelineservice-bestbuy
---
# Deployment for Product Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productservice-bestbuy
spec:
  replicas: 1 # Single replica
  selector:
    matchLabels:
      app: productservice-bestbuy
  template:
    metadata:
      labels:
        app: productservice-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: product-service
          image: nidhi0152/bestbuy-productservice:latest # Custom product service image
          ports:
            - containerPort: 3002 # Product service listens on this port
          env: # Environment variables for configuration
            - name: AI_SERVICE_URL
              value: "http://ai-service:5001/" # URL for AI service integration
          resources: # Resource requests and limits
            requests:
              cpu: 1m
              memory: 1Mi
            limits:
              cpu: 2m
              memory: 20Mi
          readinessProbe: # Ready status probe
            httpGet:
              path: /health
              port: 3002
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe: # Ongoing health check
            httpGet:
              path: /health
              port: 3002
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Product Service
apiVersion: v1
kind: Service
metadata:
  name: productservice-bestbuy
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3002 # Service port
      targetPort: 3002
  selector:
    app: productservice-bestbuy
---
# Deployment for Store Front
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-bestbuy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-bestbuy
  template:
    metadata:
      labels:
        app: frontend-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: store-front
          image: nidhi0152/bestbuy-frontend:latest # Front-end store application
          ports:
            - containerPort: 8080 # Front-end app port
              name: store-front
          env: # Environment variables for backend URLs
            - name: VUE_APP_ORDER_SERVICE_URL
              value: "http://orderservice-bestbuy:3000/"
            - name: VUE_APP_PRODUCT_SERVICE_URL
              value: "http://productservice-bestbuy:3002/"
          resources: # Resource requests and limits
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          startupProbe: # Initial health check
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # Ready status probe
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe: # Ongoing health check
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Store Front
apiVersion: v1
kind: Service
metadata:
  name: frontend-bestbuy
spec:
  ports:
    - port: 80 # Service port exposed outside the cluster
      targetPort: 8080 # Target container port
  selector:
    app: frontend-bestbuy
  type: LoadBalancer # Expose service externally via load balancer
---
# Deployment for Store Admin
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storeadmin-bestbuy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storeadmin-bestbuy
  template:
    metadata:
      labels:
        app: storeadmin-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: store-admin
          image: nidhi0152/bestbuy-storeadmin:latest # Admin interface for store
          ports:
            - containerPort: 8081 # Admin app port
              name: store-admin
          env: # Environment variables for backend URLs
            - name: VUE_APP_PRODUCT_SERVICE_URL
              value: "http://productservice-bestbuy:3002/"
            - name: VUE_APP_MAKELINE_SERVICE_URL
              value: "http://makeline-service:3001/"
          resources: # Resource requests and limits
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          startupProbe: # Initial health check
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe: # Ready status probe
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe: # Ongoing health check
            httpGet:
              path: /health
              port: 8081
            failureThreshold: 5
            initialDelaySeconds: 3
            periodSeconds: 3
---
# Service for Store Admin
apiVersion: v1
kind: Service
metadata:
  name: storeadmin-bestbuy
spec:
  ports:
    - port: 80 # Service port exposed outside the cluster
      targetPort: 8081
  selector:
    app: storeadmin-bestbuy
  type: LoadBalancer # Expose service externally via load balancer
---
# Deployment for AI Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiservice-bestbuy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aiservice-bestbuy
  template:
    metadata:
      labels:
        app: aiservice-bestbuy
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: ai-service
          image: nidhi0152/bestbuy-aiservice:latest
          ports:
            - containerPort: 5001
          env:
            - name: USE_AZURE_OPENAI # set to True for Azure OpenAI, False for Public OpenAI
              value: "True"
            - name: AZURE_OPENAI_API_VERSION
              value: "2024-07-01-preview"
            - name: AZURE_OPENAI_DEPLOYMENT_NAME # required if using Azure OpenAI
              value: "gpt-4"
            - name: AZURE_OPENAI_ENDPOINT # required if using Azure OpenAI
              value: "https://desa0-m9ktnwfl-eastus2.openai.azure.com/"
            - name: AZURE_OPENAI_DALLE_ENDPOINT
              value: "https://desa0-m9ktnwfl-eastus2.openai.azure.com/"
            - name: AZURE_OPENAI_DALLE_DEPLOYMENT_NAME
              value: "dall-e-3"
            - name: OPENAI_API_KEY # always required
              valueFrom:
                secretKeyRef:
                  name: openai-api-secret
                  key: OPENAI_API_KEY
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
            limits:
              cpu: 50m
              memory: 128Mi
          startupProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 3
            failureThreshold: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 3
            failureThreshold: 10
            periodSeconds: 10
---
# Service for AI Service
apiVersion: v1
kind: Service
metadata:
  name: aiservice-bestbuy
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5001
      targetPort: 5001
  selector:
    app: aiservice-bestbuy
